pico-8 cartridge // http://www.pico-8.com
version 27
__lua__

actors = {}
DEBUG = true
t = 0
function _init()
	player = create_player(64, 64)

	add(actors,player)
	for i=1,4 do
		create_coin(rndi(7,1)*16, 100)
	end
end

function _update()
	if btn(0) then player:move(-1) end
	if btn(1) then player:move(1) end
	player:update_pos()
	for a in all(actors) do
		a:move()
	end
	t+=1
end

function _draw()
	cls()
	map(0,0,0,0,16,16)


	for a in all(actors) do
		a:draw()
	end

end



function create_actor(x,y,width,height,sprite)
	local a = {
		x = x,
		y = y,
		width = width,
		height = height,
		dx = 0,
		dy = 0,
		sprite = sprite,
		debug_text = ' ',
		draw = function(self) 
			spr(self.sprite, self.x, self.y)
			if (DEBUG) then 
				--rect(self.x,self.y,self.x+self.width-1,self.y+self.height-1)
				print(self.debug_text, self.x+self.width, self.y-8)
			end
		end,
		move = function(self)

		end
	}
	add(actors,a)
	return a
end

function create_player(x,y)
	local a = create_actor(x,y,8,8,1)
	
	a.move = move_player
	a.update_pos = update_pos
	a.check_collisions = check_collisions
	a.dx = 0
	a.dy = 0
	a.gravity = 10

	return a
end

function create_coin(x,y)
	local a = create_actor(x,y,8,8, 49)
	
	local move = function(self)
		self.y -= sin((self.x+t)/20)/2
		--self.x += cos((self.offset+t)/20)/2
	end
	a.move = move
	a.offset = rnd(128)

	return a
end

--[[ function collisions()
	for i=1,#actors do
		for j=i+1,#actors do
			if (touching())
			collide(actors[i],actors[j])
		end
	end
end ]]

function move_player(self, ddx)
	if (not ddx) return
	self.dx += ddx
	player.debug_text = self.dx
	--self.dy = ((ddy or 0) * self.dy) + self.gravity

end

function update_pos(self)
	self.dy = 8
	self.dx *= 0.5
	local bottom = self.y + self.height
	for y = 0, self.dy do
		if (not is_solid(self.x + self.width/2, bottom + y)) then
			self.dy = y
		end
	end
	
	self.x += self.dx;
	self.y += self.dy;
end

function check_collisions(self)
	--[[for a in all(actors) do
		if (not(self == a)) then
			if (colliding(self, a)) then
				print(0)
				return true
			end
		end
	end]]--

	return false
end	

function is_solid(x,y) --Check if a point is solid
	local val = mget(flr(x/8), flr((y-1)/8))
	return fget(val,0)
end
	

function rndi(max, min) --Return a random number from min-max inclusive
	return (flr(rnd(max)) + min)
end

function colliding(rect1, rect2)
	return (rect1.x < rect2.x + rect2.width and
		rect1.x + rect1.width > rect2.x and
		rect1.y < rect2.y + rect2.height and
		rect1.y + rect1.height > rect2.y)
end

__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700003333330000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0007700003bbbbb00033333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770000b7b3b7003bbbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007000bbb3bb00b7b3b7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000bbbbbb00bbb3bb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000b0000b0bbbbbbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cccccccccccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cccccccccccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cccccccccc777ccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ccccccccc77777cc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ccccccccc677777c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cccccccccc6667cc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cccccccccccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000cccccccccccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000888828880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000888828880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000888828880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000222222220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000882888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000882888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000882888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000222222220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000009aa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000009aaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000009aaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000009aaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000009aaaa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000009aa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111112111111111111121111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111111112111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111111111111111111112111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111121111111111111112111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
